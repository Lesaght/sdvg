import logging
import os
import sys
import telebot
from telebot import types
from config import BOT_TOKEN, SAVE_FOLDER, SUPPORTED_PHOTO_EXTENSIONS, SUPPORTED_VIDEO_EXTENSIONS, FILES_PER_PAGE
import file_utils

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
if not BOT_TOKEN:
    logger.error("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start."""
    bot.reply_to(message, 
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤.\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–µ –ª—é–±—ã–µ —Ñ–∞–π–ª—ã, –∏ —è —Å–æ—Ö—Ä–∞–Ω—é –∏—Ö –≤ –ø–∞–ø–∫–µ –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ.\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /files –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ.\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
    )

@bot.message_handler(commands=['help'])
def help_command(message):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /help."""
    bot.reply_to(message,
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "- –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–π —Ñ–∞–π–ª, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ\n"
        "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /files –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ\n"
        "- –ü—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–æ–ª—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤\n"
        "- –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ\n\n"
        "–í—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫–µ –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ."
    )

@bot.message_handler(commands=['files'])
def files_command(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /files."""
    show_files(message, 0)

def show_files(message, page=0, edit=False):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    all_files = file_utils.get_file_list(SAVE_FOLDER)
    
    # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã
    media_files = [f for f in all_files if file_utils.get_file_type(f, SUPPORTED_PHOTO_EXTENSIONS, SUPPORTED_VIDEO_EXTENSIONS) in ['photo', 'video']]
    
    if not media_files:
        text = "–í –ø–∞–ø–∫–µ —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤."
        markup = None
    else:
        # –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        start_idx = page * FILES_PER_PAGE
        end_idx = start_idx + FILES_PER_PAGE
        current_files = media_files[start_idx:end_idx]
        
        # –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        text = f"üìÅ –í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page+1}/{max(1, (len(media_files) + FILES_PER_PAGE - 1) // FILES_PER_PAGE)}):"
        
        markup = types.InlineKeyboardMarkup(row_width=1)
        for file in current_files:
            file_type = file_utils.get_file_type(file, SUPPORTED_PHOTO_EXTENSIONS, SUPPORTED_VIDEO_EXTENSIONS)
            icon = "üñºÔ∏è" if file_type == "photo" else "üé¨"
            display_name = os.path.basename(file)
            if len(display_name) > 30:
                display_name = display_name[:27] + "..."
            
            markup.add(
                types.InlineKeyboardButton(f"{icon} {display_name}", callback_data=f"view:{file}")
            )
        
        # –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = []
        
        if page > 0:
            nav_buttons.append(
                types.InlineKeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è", callback_data=f"page:{page-1}")
            )
            
        if end_idx < len(media_files):
            nav_buttons.append(
                types.InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è", callback_data=f"page:{page+1}")
            )
            
        if nav_buttons:
            markup.row(*nav_buttons)
    
    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    if edit and hasattr(message, 'message'):
        bot.edit_message_text(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
            text=text,
            reply_markup=markup
        )
    else:
        bot.send_message(
            chat_id=message.chat.id,
            text=text,
            reply_markup=markup
        )

def view_file(call, file_path):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞."""
    if not os.path.exists(file_path):
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–≠—Ç–æ—Ç —Ñ–∞–π–ª –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
        )
        return
    
    file_size = os.path.getsize(file_path)
    # Telegram –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 50 –ú–ë –¥–ª—è –±–æ—Ç–æ–≤
    if file_size > 50 * 1024 * 1024:
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–†–∞–∑–º–µ—Ä: {file_size/(1024*1024):.1f} –ú–ë, –ú–∞–∫—Å–∏–º—É–º: 50 –ú–ë)."
        )
        return
    
    file_type = file_utils.get_file_type(file_path, SUPPORTED_PHOTO_EXTENSIONS, SUPPORTED_VIDEO_EXTENSIONS)
    file_name = os.path.basename(file_path)
    
    # –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É", callback_data="files"))
    
    try:
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª
        if file_type == "photo":
            with open(file_path, 'rb') as file:
                bot.send_photo(
                    chat_id=call.message.chat.id,
                    photo=file,
                    caption=f"üìÑ {file_name}",
                    reply_markup=markup
                )
        elif file_type == "video":
            with open(file_path, 'rb') as file:
                bot.send_video(
                    chat_id=call.message.chat.id,
                    video=file,
                    caption=f"üìÑ {file_name}",
                    reply_markup=markup
                )
        else:
            with open(file_path, 'rb') as file:
                bot.send_document(
                    chat_id=call.message.chat.id,
                    document=file,
                    caption=f"üìÑ {file_name}",
                    reply_markup=markup
                )
            
        # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: {file_name}\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Ñ–∞–π–ª–æ–º, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.",
            reply_markup=markup
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}",
            reply_markup=markup
        )

@bot.callback_query_handler(func=lambda call: True)
def button_handler(call):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫."""
    bot.answer_callback_query(call.id)
    
    data = call.data
    
    if data == "files":
        show_files(call.message)
    elif data.startswith("page:"):
        page = int(data.split(":")[1])
        show_files(call, page, edit=True)
    elif data.startswith("view:"):
        file_path = data[5:]  # –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å "view:"
        view_file(call, file_path)
    else:
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞: {data}"
        )

@bot.message_handler(content_types=['photo', 'video', 'document'])
def receive_file(message):
    """–ü–æ–ª—É—á–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
    try:
        # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π —Ç–∏–ø —Ñ–∞–π–ª–∞ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
        if message.content_type == 'photo':
            file_info = bot.get_file(message.photo[-1].file_id)  # –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
            file_name = f"photo_{message.photo[-1].file_id}.jpg"
            file_type = "—Ñ–æ—Ç–æ"
        elif message.content_type == 'video':
            file_info = bot.get_file(message.video.file_id)
            file_name = getattr(message.video, 'file_name', None) or f"video_{message.video.file_id}.mp4"
            file_type = "–≤–∏–¥–µ–æ"
        elif message.content_type == 'document':
            file_info = bot.get_file(message.document.file_id)
            file_name = getattr(message.document, 'file_name', None) or f"doc_{message.document.file_id}"
            file_type = "–¥–æ–∫—É–º–µ–Ω—Ç"
        else:
            bot.reply_to(message, "–Ø –º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã.")
            return

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        status_message = bot.reply_to(message, f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à {file_type}...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file_path = file_utils.save_file(bot, file_info, SAVE_FOLDER, file_name)
        
        if file_path and os.path.exists(file_path):
            bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=status_message.message_id,
                text=f"–í–∞—à {file_type} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!"
            )
            logger.info(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø–æ –ø—É—Ç–∏ {file_path}")
        else:
            bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=status_message.message_id,
                text=f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à {file_type}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª {file_name}")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ receive_file: {e}")
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞: {str(e)}")

@bot.message_handler(func=lambda message: True)
def unknown_command(message):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.")

def main():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞."""
    # –°–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(SAVE_FOLDER):
        os.makedirs(SAVE_FOLDER)
        logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {SAVE_FOLDER}")

    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    print(f"–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º {BOT_TOKEN[:5]}...")
    
    try:
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling (–æ–ø—Ä–æ—Å)
        bot.polling(none_stop=True, interval=0)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()